name: build-modern-box

on:
  push:
    branches: ["main"]
    paths:
      - 'Dockerfile'
      - '.github/workflows/build-modern-box.yml'
      - 'README.md'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

env:
  IMAGE_REPO: ghcr.io/zsheak/modern-box
  NATSCLI_VERSION: 0.3.0
  MODERN_BOX_VERSION: 0.1.0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_REPO }}
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}},enable=false

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
            context: .
            file: Dockerfile
            push: true
            platforms: linux/amd64
            build-args: |
              MODERN_BOX_VERSION=${{ env.MODERN_BOX_VERSION }}
              BUILD_AUTHOR=Zakhar Shevliakov
              GIT_SHA=${{ github.sha }}
              NATSCLI_VERSION=${{ env.NATSCLI_VERSION }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

      - name: Generate SBOM (Syft)
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE_REPO }}:${{ github.sha }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMAGE_REPO }}:${{ github.sha }}
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          format: table
          exit-code: 1

      - name: Show digest
        run: echo "Digest=${{ steps.build.outputs.digest }}"